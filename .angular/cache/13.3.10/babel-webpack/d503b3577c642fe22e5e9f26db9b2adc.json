{"ast":null,"code":"import * as i0 from '@angular/core';\nimport { Component, ChangeDetectionStrategy, NgModule } from '@angular/core';\nimport * as i1 from '@angular/common';\nimport { CommonModule } from '@angular/common';\nimport * as i3 from '@ngx-formly/core';\nimport { FormlyModule } from '@ngx-formly/core';\nimport * as i2 from '@angular/forms';\nimport { ReactiveFormsModule } from '@angular/forms';\nimport { FieldType, FormlyBootstrapFormFieldModule } from '@ngx-formly/bootstrap/form-field';\n\nfunction FormlyFieldCheckbox_ng_template_0_label_2_span_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\", 6);\n    i0.ɵɵtext(1, \"*\");\n    i0.ɵɵelementEnd();\n  }\n}\n\nfunction FormlyFieldCheckbox_ng_template_0_label_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"label\", 4);\n    i0.ɵɵtext(1);\n    i0.ɵɵtemplate(2, FormlyFieldCheckbox_ng_template_0_label_2_span_2_Template, 2, 0, \"span\", 5);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r2 = i0.ɵɵnextContext(2);\n    i0.ɵɵproperty(\"for\", ctx_r2.id);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", ctx_r2.props.label, \" \");\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r2.props.required && ctx_r2.props.hideRequiredMarker !== true);\n  }\n}\n\nconst _c0 = function (a0, a1) {\n  return {\n    \"form-check-inline\": a0,\n    \"form-switch\": a1\n  };\n};\n\nfunction FormlyFieldCheckbox_ng_template_0_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 1);\n    i0.ɵɵelement(1, \"input\", 2);\n    i0.ɵɵtemplate(2, FormlyFieldCheckbox_ng_template_0_label_2_Template, 3, 3, \"label\", 3);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"ngClass\", i0.ɵɵpureFunction2(9, _c0, ctx_r1.props.formCheck === \"inline\" || ctx_r1.props.formCheck === \"inline-switch\", ctx_r1.props.formCheck === \"switch\" || ctx_r1.props.formCheck === \"inline-switch\"));\n    i0.ɵɵadvance(1);\n    i0.ɵɵclassProp(\"is-invalid\", ctx_r1.showError)(\"position-static\", ctx_r1.props.formCheck === \"nolabel\");\n    i0.ɵɵproperty(\"indeterminate\", ctx_r1.props.indeterminate && ctx_r1.formControl.value == null)(\"formControl\", ctx_r1.formControl)(\"formlyAttributes\", ctx_r1.field);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r1.props.formCheck !== \"nolabel\");\n  }\n}\n\nlet FormlyFieldCheckbox = /*#__PURE__*/(() => {\n  class FormlyFieldCheckbox extends FieldType {\n    constructor() {\n      super(...arguments);\n      this.defaultOptions = {\n        props: {\n          indeterminate: true,\n          hideLabel: true,\n          formCheck: 'default'\n        }\n      };\n    }\n\n  }\n\n  FormlyFieldCheckbox.ɵfac = /* @__PURE__ */function () {\n    let ɵFormlyFieldCheckbox_BaseFactory;\n    return function FormlyFieldCheckbox_Factory(t) {\n      return (ɵFormlyFieldCheckbox_BaseFactory || (ɵFormlyFieldCheckbox_BaseFactory = i0.ɵɵgetInheritedFactory(FormlyFieldCheckbox)))(t || FormlyFieldCheckbox);\n    };\n  }();\n\n  FormlyFieldCheckbox.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n    type: FormlyFieldCheckbox,\n    selectors: [[\"formly-field-checkbox\"]],\n    features: [i0.ɵɵInheritDefinitionFeature],\n    decls: 2,\n    vars: 0,\n    consts: [[\"fieldTypeTemplate\", \"\"], [1, \"form-check\", 3, \"ngClass\"], [\"type\", \"checkbox\", 1, \"form-check-input\", 3, \"indeterminate\", \"formControl\", \"formlyAttributes\"], [\"class\", \"form-check-label\", 3, \"for\", 4, \"ngIf\"], [1, \"form-check-label\", 3, \"for\"], [\"aria-hidden\", \"true\", 4, \"ngIf\"], [\"aria-hidden\", \"true\"]],\n    template: function FormlyFieldCheckbox_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵtemplate(0, FormlyFieldCheckbox_ng_template_0_Template, 3, 12, \"ng-template\", null, 0, i0.ɵɵtemplateRefExtractor);\n      }\n    },\n    directives: [i1.NgClass, i2.CheckboxControlValueAccessor, i2.NgControlStatus, i2.FormControlDirective, i3.ɵFormlyAttributes, i1.NgIf],\n    encapsulation: 2,\n    changeDetection: 0\n  });\n  return FormlyFieldCheckbox;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\nlet FormlyBootstrapCheckboxModule = /*#__PURE__*/(() => {\n  class FormlyBootstrapCheckboxModule {}\n\n  FormlyBootstrapCheckboxModule.ɵfac = function FormlyBootstrapCheckboxModule_Factory(t) {\n    return new (t || FormlyBootstrapCheckboxModule)();\n  };\n\n  FormlyBootstrapCheckboxModule.ɵmod = /* @__PURE__ */i0.ɵɵdefineNgModule({\n    type: FormlyBootstrapCheckboxModule\n  });\n  FormlyBootstrapCheckboxModule.ɵinj = /* @__PURE__ */i0.ɵɵdefineInjector({\n    imports: [[CommonModule, ReactiveFormsModule, FormlyBootstrapFormFieldModule, FormlyModule.forChild({\n      types: [{\n        name: 'checkbox',\n        component: FormlyFieldCheckbox,\n        wrappers: ['form-field']\n      }, {\n        name: 'boolean',\n        extends: 'checkbox'\n      }]\n    })]]\n  });\n  return FormlyBootstrapCheckboxModule;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n/**\n * Generated bundle index. Do not edit.\n */\n\n\nexport { FormlyBootstrapCheckboxModule, FormlyFieldCheckbox }; //# sourceMappingURL=ngx-formly-bootstrap-checkbox.mjs.map","map":null,"metadata":{},"sourceType":"module"}