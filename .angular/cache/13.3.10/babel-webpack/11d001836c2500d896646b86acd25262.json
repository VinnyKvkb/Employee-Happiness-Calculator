{"ast":null,"code":"import * as i0 from '@angular/core';\nimport { Component, ChangeDetectionStrategy, ViewChild, NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport * as i3 from '@ngx-formly/core';\nimport { FormlyModule } from '@ngx-formly/core';\nimport * as i2 from '@angular/forms';\nimport { ReactiveFormsModule } from '@angular/forms';\nimport * as i1 from '@angular/material/slide-toggle';\nimport { MatSlideToggle, MatSlideToggleModule } from '@angular/material/slide-toggle';\nimport { FieldType, FormlyMatFormFieldModule } from '@ngx-formly/material/form-field';\nlet FormlyFieldToggle = /*#__PURE__*/(() => {\n  class FormlyFieldToggle extends FieldType {\n    constructor() {\n      super(...arguments);\n      this.defaultOptions = {\n        props: {\n          hideFieldUnderline: true,\n          floatLabel: 'always',\n          hideLabel: true\n        }\n      };\n    }\n\n    onContainerClick(event) {\n      this.slideToggle.focus();\n      super.onContainerClick(event);\n    }\n\n  }\n\n  FormlyFieldToggle.ɵfac = /* @__PURE__ */function () {\n    let ɵFormlyFieldToggle_BaseFactory;\n    return function FormlyFieldToggle_Factory(t) {\n      return (ɵFormlyFieldToggle_BaseFactory || (ɵFormlyFieldToggle_BaseFactory = i0.ɵɵgetInheritedFactory(FormlyFieldToggle)))(t || FormlyFieldToggle);\n    };\n  }();\n\n  FormlyFieldToggle.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n    type: FormlyFieldToggle,\n    selectors: [[\"formly-field-mat-toggle\"]],\n    viewQuery: function FormlyFieldToggle_Query(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵviewQuery(MatSlideToggle, 7);\n      }\n\n      if (rf & 2) {\n        let _t;\n\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.slideToggle = _t.first);\n      }\n    },\n    features: [i0.ɵɵInheritDefinitionFeature],\n    decls: 2,\n    vars: 8,\n    consts: [[3, \"id\", \"formControl\", \"formlyAttributes\", \"color\", \"tabIndex\", \"required\", \"labelPosition\"]],\n    template: function FormlyFieldToggle_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"mat-slide-toggle\", 0);\n        i0.ɵɵtext(1);\n        i0.ɵɵelementEnd();\n      }\n\n      if (rf & 2) {\n        i0.ɵɵproperty(\"id\", ctx.id)(\"formControl\", ctx.formControl)(\"formlyAttributes\", ctx.field)(\"color\", ctx.props.color)(\"tabIndex\", ctx.props.tabindex)(\"required\", ctx.required)(\"labelPosition\", ctx.props.labelPosition);\n        i0.ɵɵadvance(1);\n        i0.ɵɵtextInterpolate1(\" \", ctx.props.label, \" \");\n      }\n    },\n    directives: [i1.MatSlideToggle, i1.MatSlideToggleRequiredValidator, i2.NgControlStatus, i2.FormControlDirective, i3.ɵFormlyAttributes, i2.RequiredValidator],\n    encapsulation: 2,\n    changeDetection: 0\n  });\n  return FormlyFieldToggle;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\nlet FormlyMatToggleModule = /*#__PURE__*/(() => {\n  class FormlyMatToggleModule {}\n\n  FormlyMatToggleModule.ɵfac = function FormlyMatToggleModule_Factory(t) {\n    return new (t || FormlyMatToggleModule)();\n  };\n\n  FormlyMatToggleModule.ɵmod = /* @__PURE__ */i0.ɵɵdefineNgModule({\n    type: FormlyMatToggleModule\n  });\n  FormlyMatToggleModule.ɵinj = /* @__PURE__ */i0.ɵɵdefineInjector({\n    imports: [[CommonModule, ReactiveFormsModule, MatSlideToggleModule, FormlyMatFormFieldModule, FormlyModule.forChild({\n      types: [{\n        name: 'toggle',\n        component: FormlyFieldToggle,\n        wrappers: ['form-field']\n      }]\n    })]]\n  });\n  return FormlyMatToggleModule;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n/**\n * Generated bundle index. Do not edit.\n */\n\n\nexport { FormlyFieldToggle, FormlyMatToggleModule }; //# sourceMappingURL=ngx-formly-material-toggle.mjs.map","map":null,"metadata":{},"sourceType":"module"}