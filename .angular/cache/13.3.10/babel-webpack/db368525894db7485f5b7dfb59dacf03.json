{"ast":null,"code":"import * as i0 from '@angular/core';\nimport { Component, ViewEncapsulation, ViewChild, NgModule } from '@angular/core';\nimport * as i1 from '@angular/common';\nimport { CommonModule } from '@angular/common';\nimport * as i1$1 from '@ngx-formly/core';\nimport { FieldWrapper, FormlyModule } from '@ngx-formly/core';\nimport { ReactiveFormsModule } from '@angular/forms';\nconst _c0 = [\"fieldTypeTemplate\"];\n\nfunction FormlyWrapperAddons_ng_template_0_div_1_i_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"i\", 7);\n  }\n\n  if (rf & 2) {\n    const ctx_r5 = i0.ɵɵnextContext(3);\n    i0.ɵɵproperty(\"ngClass\", ctx_r5.props.addonLeft.class);\n  }\n}\n\nfunction FormlyWrapperAddons_ng_template_0_div_1_span_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\");\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r6 = i0.ɵɵnextContext(3);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(ctx_r6.props.addonLeft.text);\n  }\n}\n\nfunction FormlyWrapperAddons_ng_template_0_div_1_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r8 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"div\", 4);\n    i0.ɵɵlistener(\"click\", function FormlyWrapperAddons_ng_template_0_div_1_Template_div_click_0_listener($event) {\n      i0.ɵɵrestoreView(_r8);\n      const ctx_r7 = i0.ɵɵnextContext(2);\n      return ctx_r7.addonLeftClick($event);\n    });\n    i0.ɵɵtemplate(1, FormlyWrapperAddons_ng_template_0_div_1_i_1_Template, 1, 1, \"i\", 5);\n    i0.ɵɵtemplate(2, FormlyWrapperAddons_ng_template_0_div_1_span_2_Template, 2, 1, \"span\", 6);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r2 = i0.ɵɵnextContext(2);\n    i0.ɵɵclassProp(\"input-group-btn\", ctx_r2.props.addonLeft.onClick);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r2.props.addonLeft.class);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r2.props.addonLeft.text);\n  }\n}\n\nfunction FormlyWrapperAddons_ng_template_0_div_4_i_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"i\", 7);\n  }\n\n  if (rf & 2) {\n    const ctx_r9 = i0.ɵɵnextContext(3);\n    i0.ɵɵproperty(\"ngClass\", ctx_r9.props.addonRight.class);\n  }\n}\n\nfunction FormlyWrapperAddons_ng_template_0_div_4_span_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\");\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r10 = i0.ɵɵnextContext(3);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(ctx_r10.props.addonRight.text);\n  }\n}\n\nfunction FormlyWrapperAddons_ng_template_0_div_4_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r12 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"div\", 4);\n    i0.ɵɵlistener(\"click\", function FormlyWrapperAddons_ng_template_0_div_4_Template_div_click_0_listener($event) {\n      i0.ɵɵrestoreView(_r12);\n      const ctx_r11 = i0.ɵɵnextContext(2);\n      return ctx_r11.addonRightClick($event);\n    });\n    i0.ɵɵtemplate(1, FormlyWrapperAddons_ng_template_0_div_4_i_1_Template, 1, 1, \"i\", 5);\n    i0.ɵɵtemplate(2, FormlyWrapperAddons_ng_template_0_div_4_span_2_Template, 2, 1, \"span\", 6);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r4 = i0.ɵɵnextContext(2);\n    i0.ɵɵclassProp(\"input-group-btn\", ctx_r4.props.addonRight.onClick);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r4.props.addonRight.class);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r4.props.addonRight.text);\n  }\n}\n\nfunction FormlyWrapperAddons_ng_template_0_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 1);\n    i0.ɵɵtemplate(1, FormlyWrapperAddons_ng_template_0_div_1_Template, 3, 4, \"div\", 2);\n    i0.ɵɵelementContainer(2, null, 3);\n    i0.ɵɵtemplate(4, FormlyWrapperAddons_ng_template_0_div_4_Template, 3, 4, \"div\", 2);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵclassProp(\"has-validation\", ctx_r1.showError);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r1.props.addonLeft);\n    i0.ɵɵadvance(3);\n    i0.ɵɵproperty(\"ngIf\", ctx_r1.props.addonRight);\n  }\n}\n\nlet FormlyWrapperAddons = /*#__PURE__*/(() => {\n  class FormlyWrapperAddons extends FieldWrapper {\n    constructor(hostContainerRef) {\n      super();\n      this.hostContainerRef = hostContainerRef;\n    }\n\n    set content(templateRef) {\n      if (templateRef && this.hostContainerRef) {\n        this.hostContainerRef.createEmbeddedView(templateRef);\n      }\n    }\n\n    addonRightClick($event) {\n      var _a, _b;\n\n      (_b = (_a = this.props.addonRight).onClick) === null || _b === void 0 ? void 0 : _b.call(_a, this.field, $event);\n    }\n\n    addonLeftClick($event) {\n      var _a, _b;\n\n      (_b = (_a = this.props.addonLeft).onClick) === null || _b === void 0 ? void 0 : _b.call(_a, this.field, $event);\n    }\n\n  }\n\n  FormlyWrapperAddons.ɵfac = function FormlyWrapperAddons_Factory(t) {\n    return new (t || FormlyWrapperAddons)(i0.ɵɵdirectiveInject(i0.ViewContainerRef));\n  };\n\n  FormlyWrapperAddons.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n    type: FormlyWrapperAddons,\n    selectors: [[\"formly-wrapper-addons\"]],\n    viewQuery: function FormlyWrapperAddons_Query(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵviewQuery(_c0, 7);\n      }\n\n      if (rf & 2) {\n        let _t;\n\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.content = _t.first);\n      }\n    },\n    features: [i0.ɵɵInheritDefinitionFeature],\n    decls: 2,\n    vars: 0,\n    consts: [[\"fieldTypeTemplate\", \"\"], [1, \"input-group\"], [\"class\", \"input-group-text\", 3, \"input-group-btn\", \"click\", 4, \"ngIf\"], [\"fieldComponent\", \"\"], [1, \"input-group-text\", 3, \"click\"], [3, \"ngClass\", 4, \"ngIf\"], [4, \"ngIf\"], [3, \"ngClass\"]],\n    template: function FormlyWrapperAddons_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵtemplate(0, FormlyWrapperAddons_ng_template_0_Template, 5, 4, \"ng-template\", null, 0, i0.ɵɵtemplateRefExtractor);\n      }\n    },\n    directives: [i1.NgIf, i1.NgClass],\n    styles: [\"formly-wrapper-form-field .input-group-btn{cursor:pointer}\\n\"],\n    encapsulation: 2\n  });\n  return FormlyWrapperAddons;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\nfunction addonsExtension(field) {\n  if (!field.props || field.wrappers && field.wrappers.indexOf('addons') !== -1) {\n    return;\n  }\n\n  if (field.props.addonLeft || field.props.addonRight) {\n    field.wrappers = [...(field.wrappers || []), 'addons'];\n  }\n}\n\nlet FormlyBootstrapAddonsModule = /*#__PURE__*/(() => {\n  class FormlyBootstrapAddonsModule {}\n\n  FormlyBootstrapAddonsModule.ɵfac = function FormlyBootstrapAddonsModule_Factory(t) {\n    return new (t || FormlyBootstrapAddonsModule)();\n  };\n\n  FormlyBootstrapAddonsModule.ɵmod = /* @__PURE__ */i0.ɵɵdefineNgModule({\n    type: FormlyBootstrapAddonsModule\n  });\n  FormlyBootstrapAddonsModule.ɵinj = /* @__PURE__ */i0.ɵɵdefineInjector({\n    imports: [[CommonModule, ReactiveFormsModule, FormlyModule.forChild({\n      wrappers: [{\n        name: 'addons',\n        component: FormlyWrapperAddons\n      }],\n      extensions: [{\n        name: 'addons',\n        extension: {\n          postPopulate: addonsExtension\n        }\n      }]\n    })]]\n  });\n  return FormlyBootstrapAddonsModule;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n/**\n * Generated bundle index. Do not edit.\n */\n\n\nexport { FormlyBootstrapAddonsModule }; //# sourceMappingURL=ngx-formly-bootstrap-addons.mjs.map","map":null,"metadata":{},"sourceType":"module"}