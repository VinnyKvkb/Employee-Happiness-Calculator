{"ast":null,"code":"import * as i0 from '@angular/core';\nimport { Component, ChangeDetectionStrategy, NgModule } from '@angular/core';\nimport * as i1 from '@angular/common';\nimport { CommonModule } from '@angular/common';\nimport * as i3 from '@ngx-formly/core';\nimport { FormlyModule } from '@ngx-formly/core';\nimport * as i2 from '@angular/forms';\nimport { ReactiveFormsModule } from '@angular/forms';\nimport { FieldType, FormlyBootstrapFormFieldModule } from '@ngx-formly/bootstrap/form-field';\n\nfunction FormlyFieldInput_ng_template_0_input_0_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"input\", 3);\n  }\n\n  if (rf & 2) {\n    const ctx_r2 = i0.ɵɵnextContext(2);\n    i0.ɵɵclassProp(\"is-invalid\", ctx_r2.showError);\n    i0.ɵɵproperty(\"type\", ctx_r2.type)(\"formControl\", ctx_r2.formControl)(\"formlyAttributes\", ctx_r2.field);\n  }\n}\n\nfunction FormlyFieldInput_ng_template_0_ng_template_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"input\", 4);\n  }\n\n  if (rf & 2) {\n    const ctx_r4 = i0.ɵɵnextContext(2);\n    i0.ɵɵclassProp(\"is-invalid\", ctx_r4.showError);\n    i0.ɵɵproperty(\"formControl\", ctx_r4.formControl)(\"formlyAttributes\", ctx_r4.field);\n  }\n}\n\nfunction FormlyFieldInput_ng_template_0_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵtemplate(0, FormlyFieldInput_ng_template_0_input_0_Template, 1, 5, \"input\", 1);\n    i0.ɵɵtemplate(1, FormlyFieldInput_ng_template_0_ng_template_1_Template, 1, 4, \"ng-template\", null, 2, i0.ɵɵtemplateRefExtractor);\n  }\n\n  if (rf & 2) {\n    const _r3 = i0.ɵɵreference(2);\n\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"ngIf\", ctx_r1.type !== \"number\")(\"ngIfElse\", _r3);\n  }\n}\n\nlet FormlyFieldInput = /*#__PURE__*/(() => {\n  class FormlyFieldInput extends FieldType {\n    get type() {\n      return this.props.type || 'text';\n    }\n\n  }\n\n  FormlyFieldInput.ɵfac = /* @__PURE__ */function () {\n    let ɵFormlyFieldInput_BaseFactory;\n    return function FormlyFieldInput_Factory(t) {\n      return (ɵFormlyFieldInput_BaseFactory || (ɵFormlyFieldInput_BaseFactory = i0.ɵɵgetInheritedFactory(FormlyFieldInput)))(t || FormlyFieldInput);\n    };\n  }();\n\n  FormlyFieldInput.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n    type: FormlyFieldInput,\n    selectors: [[\"formly-field-input\"]],\n    features: [i0.ɵɵInheritDefinitionFeature],\n    decls: 2,\n    vars: 0,\n    consts: [[\"fieldTypeTemplate\", \"\"], [\"class\", \"form-control\", 3, \"type\", \"formControl\", \"formlyAttributes\", \"is-invalid\", 4, \"ngIf\", \"ngIfElse\"], [\"numberTmp\", \"\"], [1, \"form-control\", 3, \"type\", \"formControl\", \"formlyAttributes\"], [\"type\", \"number\", 1, \"form-control\", 3, \"formControl\", \"formlyAttributes\"]],\n    template: function FormlyFieldInput_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵtemplate(0, FormlyFieldInput_ng_template_0_Template, 3, 2, \"ng-template\", null, 0, i0.ɵɵtemplateRefExtractor);\n      }\n    },\n    directives: [i1.NgIf, i2.DefaultValueAccessor, i2.NgControlStatus, i2.FormControlDirective, i3.ɵFormlyAttributes, i2.NumberValueAccessor],\n    encapsulation: 2,\n    changeDetection: 0\n  });\n  return FormlyFieldInput;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\nlet FormlyBootstrapInputModule = /*#__PURE__*/(() => {\n  class FormlyBootstrapInputModule {}\n\n  FormlyBootstrapInputModule.ɵfac = function FormlyBootstrapInputModule_Factory(t) {\n    return new (t || FormlyBootstrapInputModule)();\n  };\n\n  FormlyBootstrapInputModule.ɵmod = /* @__PURE__ */i0.ɵɵdefineNgModule({\n    type: FormlyBootstrapInputModule\n  });\n  FormlyBootstrapInputModule.ɵinj = /* @__PURE__ */i0.ɵɵdefineInjector({\n    imports: [[CommonModule, ReactiveFormsModule, FormlyBootstrapFormFieldModule, FormlyModule.forChild({\n      types: [{\n        name: 'input',\n        component: FormlyFieldInput,\n        wrappers: ['form-field']\n      }, {\n        name: 'string',\n        extends: 'input'\n      }, {\n        name: 'number',\n        extends: 'input',\n        defaultOptions: {\n          props: {\n            type: 'number'\n          }\n        }\n      }, {\n        name: 'integer',\n        extends: 'input',\n        defaultOptions: {\n          props: {\n            type: 'number'\n          }\n        }\n      }]\n    })]]\n  });\n  return FormlyBootstrapInputModule;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n/**\n * Generated bundle index. Do not edit.\n */\n\n\nexport { FormlyBootstrapInputModule, FormlyFieldInput }; //# sourceMappingURL=ngx-formly-bootstrap-input.mjs.map","map":null,"metadata":{},"sourceType":"module"}