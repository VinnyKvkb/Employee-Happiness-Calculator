{"ast":null,"code":"import * as i0 from '@angular/core';\nimport { Component, ChangeDetectionStrategy, ViewChild, NgModule } from '@angular/core';\nimport * as i1 from '@angular/common';\nimport { CommonModule } from '@angular/common';\nimport * as i2 from '@angular/forms';\nimport { SelectControlValueAccessor, ReactiveFormsModule } from '@angular/forms';\nimport * as i3 from '@ngx-formly/core';\nimport { FormlyModule } from '@ngx-formly/core';\nimport * as i4 from '@ngx-formly/core/select';\nimport { FormlySelectModule } from '@ngx-formly/core/select';\nimport { FieldType, FormlyBootstrapFormFieldModule } from '@ngx-formly/bootstrap/form-field';\nimport { take } from 'rxjs/operators';\n\nfunction FormlyFieldSelect_ng_template_0_select_0_ng_container_1_ng_container_1_option_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"option\", 8);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const opt_r8 = i0.ɵɵnextContext().$implicit;\n    i0.ɵɵproperty(\"ngValue\", opt_r8.value)(\"disabled\", opt_r8.disabled);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", opt_r8.label, \" \");\n  }\n}\n\nfunction FormlyFieldSelect_ng_template_0_select_0_ng_container_1_ng_container_1_ng_template_2_option_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"option\", 8);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const child_r14 = ctx.$implicit;\n    i0.ɵɵproperty(\"ngValue\", child_r14.value)(\"disabled\", child_r14.disabled);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", child_r14.label, \" \");\n  }\n}\n\nfunction FormlyFieldSelect_ng_template_0_select_0_ng_container_1_ng_container_1_ng_template_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"optgroup\", 9);\n    i0.ɵɵtemplate(1, FormlyFieldSelect_ng_template_0_select_0_ng_container_1_ng_container_1_ng_template_2_option_1_Template, 2, 3, \"option\", 10);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const opt_r8 = i0.ɵɵnextContext().$implicit;\n    i0.ɵɵproperty(\"label\", opt_r8.label);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngForOf\", opt_r8.group);\n  }\n}\n\nfunction FormlyFieldSelect_ng_template_0_select_0_ng_container_1_ng_container_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵtemplate(1, FormlyFieldSelect_ng_template_0_select_0_ng_container_1_ng_container_1_option_1_Template, 2, 3, \"option\", 6);\n    i0.ɵɵtemplate(2, FormlyFieldSelect_ng_template_0_select_0_ng_container_1_ng_container_1_ng_template_2_Template, 2, 2, \"ng-template\", null, 7, i0.ɵɵtemplateRefExtractor);\n    i0.ɵɵelementContainerEnd();\n  }\n\n  if (rf & 2) {\n    const opt_r8 = ctx.$implicit;\n\n    const _r10 = i0.ɵɵreference(3);\n\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", !opt_r8.group)(\"ngIfElse\", _r10);\n  }\n}\n\nfunction FormlyFieldSelect_ng_template_0_select_0_ng_container_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵtemplate(1, FormlyFieldSelect_ng_template_0_select_0_ng_container_1_ng_container_1_Template, 4, 2, \"ng-container\", 5);\n    i0.ɵɵelementContainerEnd();\n  }\n\n  if (rf & 2) {\n    const opts_r6 = ctx.ngIf;\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngForOf\", opts_r6);\n  }\n}\n\nfunction FormlyFieldSelect_ng_template_0_select_0_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"select\", 3);\n    i0.ɵɵtemplate(1, FormlyFieldSelect_ng_template_0_select_0_ng_container_1_Template, 2, 1, \"ng-container\", 4);\n    i0.ɵɵpipe(2, \"async\");\n    i0.ɵɵpipe(3, \"formlySelectOptions\");\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r2 = i0.ɵɵnextContext(2);\n    i0.ɵɵclassProp(\"is-invalid\", ctx_r2.showError);\n    i0.ɵɵproperty(\"formControl\", ctx_r2.formControl)(\"compareWith\", ctx_r2.props.compareWith)(\"formlyAttributes\", ctx_r2.field);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", i0.ɵɵpipeBind1(2, 6, i0.ɵɵpipeBind2(3, 8, ctx_r2.props.options, ctx_r2.field)));\n  }\n}\n\nfunction FormlyFieldSelect_ng_template_0_ng_template_1_option_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"option\", 13);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r16 = i0.ɵɵnextContext(3);\n    i0.ɵɵproperty(\"ngValue\", undefined);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(ctx_r16.props.placeholder);\n  }\n}\n\nfunction FormlyFieldSelect_ng_template_0_ng_template_1_ng_container_2_ng_container_1_option_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"option\", 8);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const opt_r20 = i0.ɵɵnextContext().$implicit;\n    i0.ɵɵproperty(\"ngValue\", opt_r20.value)(\"disabled\", opt_r20.disabled);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", opt_r20.label, \" \");\n  }\n}\n\nfunction FormlyFieldSelect_ng_template_0_ng_template_1_ng_container_2_ng_container_1_ng_template_2_option_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"option\", 8);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const child_r26 = ctx.$implicit;\n    i0.ɵɵproperty(\"ngValue\", child_r26.value)(\"disabled\", child_r26.disabled);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", child_r26.label, \" \");\n  }\n}\n\nfunction FormlyFieldSelect_ng_template_0_ng_template_1_ng_container_2_ng_container_1_ng_template_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"optgroup\", 9);\n    i0.ɵɵtemplate(1, FormlyFieldSelect_ng_template_0_ng_template_1_ng_container_2_ng_container_1_ng_template_2_option_1_Template, 2, 3, \"option\", 10);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const opt_r20 = i0.ɵɵnextContext().$implicit;\n    i0.ɵɵproperty(\"label\", opt_r20.label);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngForOf\", opt_r20.group);\n  }\n}\n\nfunction FormlyFieldSelect_ng_template_0_ng_template_1_ng_container_2_ng_container_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵtemplate(1, FormlyFieldSelect_ng_template_0_ng_template_1_ng_container_2_ng_container_1_option_1_Template, 2, 3, \"option\", 6);\n    i0.ɵɵtemplate(2, FormlyFieldSelect_ng_template_0_ng_template_1_ng_container_2_ng_container_1_ng_template_2_Template, 2, 2, \"ng-template\", null, 7, i0.ɵɵtemplateRefExtractor);\n    i0.ɵɵelementContainerEnd();\n  }\n\n  if (rf & 2) {\n    const opt_r20 = ctx.$implicit;\n\n    const _r22 = i0.ɵɵreference(3);\n\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", !opt_r20.group)(\"ngIfElse\", _r22);\n  }\n}\n\nfunction FormlyFieldSelect_ng_template_0_ng_template_1_ng_container_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵtemplate(1, FormlyFieldSelect_ng_template_0_ng_template_1_ng_container_2_ng_container_1_Template, 4, 2, \"ng-container\", 5);\n    i0.ɵɵelementContainerEnd();\n  }\n\n  if (rf & 2) {\n    const opts_r18 = ctx.ngIf;\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngForOf\", opts_r18);\n  }\n}\n\nfunction FormlyFieldSelect_ng_template_0_ng_template_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"select\", 11);\n    i0.ɵɵtemplate(1, FormlyFieldSelect_ng_template_0_ng_template_1_option_1_Template, 2, 2, \"option\", 12);\n    i0.ɵɵtemplate(2, FormlyFieldSelect_ng_template_0_ng_template_1_ng_container_2_Template, 2, 1, \"ng-container\", 4);\n    i0.ɵɵpipe(3, \"async\");\n    i0.ɵɵpipe(4, \"formlySelectOptions\");\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r4 = i0.ɵɵnextContext(2);\n    i0.ɵɵclassProp(\"is-invalid\", ctx_r4.showError);\n    i0.ɵɵproperty(\"formControl\", ctx_r4.formControl)(\"compareWith\", ctx_r4.props.compareWith)(\"formlyAttributes\", ctx_r4.field);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r4.props.placeholder);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", i0.ɵɵpipeBind1(3, 7, i0.ɵɵpipeBind2(4, 9, ctx_r4.props.options, ctx_r4.field)));\n  }\n}\n\nfunction FormlyFieldSelect_ng_template_0_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵtemplate(0, FormlyFieldSelect_ng_template_0_select_0_Template, 4, 11, \"select\", 1);\n    i0.ɵɵtemplate(1, FormlyFieldSelect_ng_template_0_ng_template_1_Template, 5, 12, \"ng-template\", null, 2, i0.ɵɵtemplateRefExtractor);\n  }\n\n  if (rf & 2) {\n    const _r3 = i0.ɵɵreference(2);\n\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"ngIf\", ctx_r1.props.multiple)(\"ngIfElse\", _r3);\n  }\n}\n\nlet FormlyFieldSelect = /*#__PURE__*/(() => {\n  class FormlyFieldSelect extends FieldType {\n    constructor(ngZone, hostContainerRef) {\n      super(hostContainerRef);\n      this.ngZone = ngZone;\n      this.defaultOptions = {\n        props: {\n          compareWith(o1, o2) {\n            return o1 === o2;\n          }\n\n        }\n      };\n    } // workaround for https://github.com/angular/angular/issues/10010\n\n    /**\n     * TODO: Check if this is still needed\n     */\n\n\n    set selectAccessor(s) {\n      if (!s) {\n        return;\n      }\n\n      const writeValue = s.writeValue.bind(s);\n\n      if (s._getOptionId(s.value) === null) {\n        writeValue(s.value);\n      }\n\n      s.writeValue = value => {\n        const id = s._idCounter;\n        writeValue(value);\n\n        if (value === null) {\n          this.ngZone.onStable.asObservable().pipe(take(1)).subscribe(() => {\n            if (id !== s._idCounter && s._getOptionId(value) === null && s._elementRef.nativeElement.selectedIndex !== -1) {\n              writeValue(value);\n            }\n          });\n        }\n      };\n    }\n\n  }\n\n  FormlyFieldSelect.ɵfac = function FormlyFieldSelect_Factory(t) {\n    return new (t || FormlyFieldSelect)(i0.ɵɵdirectiveInject(i0.NgZone), i0.ɵɵdirectiveInject(i0.ViewContainerRef));\n  };\n\n  FormlyFieldSelect.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n    type: FormlyFieldSelect,\n    selectors: [[\"formly-field-select\"]],\n    viewQuery: function FormlyFieldSelect_Query(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵviewQuery(SelectControlValueAccessor, 5);\n      }\n\n      if (rf & 2) {\n        let _t;\n\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.selectAccessor = _t.first);\n      }\n    },\n    features: [i0.ɵɵInheritDefinitionFeature],\n    decls: 2,\n    vars: 0,\n    consts: [[\"fieldTypeTemplate\", \"\"], [\"class\", \"form-select\", \"multiple\", \"\", 3, \"formControl\", \"compareWith\", \"is-invalid\", \"formlyAttributes\", 4, \"ngIf\", \"ngIfElse\"], [\"singleSelect\", \"\"], [\"multiple\", \"\", 1, \"form-select\", 3, \"formControl\", \"compareWith\", \"formlyAttributes\"], [4, \"ngIf\"], [4, \"ngFor\", \"ngForOf\"], [3, \"ngValue\", \"disabled\", 4, \"ngIf\", \"ngIfElse\"], [\"optgroup\", \"\"], [3, \"ngValue\", \"disabled\"], [3, \"label\"], [3, \"ngValue\", \"disabled\", 4, \"ngFor\", \"ngForOf\"], [1, \"form-select\", 3, \"formControl\", \"compareWith\", \"formlyAttributes\"], [3, \"ngValue\", 4, \"ngIf\"], [3, \"ngValue\"]],\n    template: function FormlyFieldSelect_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵtemplate(0, FormlyFieldSelect_ng_template_0_Template, 3, 2, \"ng-template\", null, 0, i0.ɵɵtemplateRefExtractor);\n      }\n    },\n    directives: [i1.NgIf, i2.SelectMultipleControlValueAccessor, i2.NgControlStatus, i2.FormControlDirective, i3.ɵFormlyAttributes, i1.NgForOf, i2.NgSelectOption, i2.ɵNgSelectMultipleOption, i2.SelectControlValueAccessor],\n    pipes: [i1.AsyncPipe, i4.FormlySelectOptionsPipe],\n    encapsulation: 2,\n    changeDetection: 0\n  });\n  return FormlyFieldSelect;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\nlet FormlyBootstrapSelectModule = /*#__PURE__*/(() => {\n  class FormlyBootstrapSelectModule {}\n\n  FormlyBootstrapSelectModule.ɵfac = function FormlyBootstrapSelectModule_Factory(t) {\n    return new (t || FormlyBootstrapSelectModule)();\n  };\n\n  FormlyBootstrapSelectModule.ɵmod = /* @__PURE__ */i0.ɵɵdefineNgModule({\n    type: FormlyBootstrapSelectModule\n  });\n  FormlyBootstrapSelectModule.ɵinj = /* @__PURE__ */i0.ɵɵdefineInjector({\n    imports: [[CommonModule, ReactiveFormsModule, FormlyBootstrapFormFieldModule, FormlySelectModule, FormlyModule.forChild({\n      types: [{\n        name: 'select',\n        component: FormlyFieldSelect,\n        wrappers: ['form-field']\n      }, {\n        name: 'enum',\n        extends: 'select'\n      }]\n    })]]\n  });\n  return FormlyBootstrapSelectModule;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n/**\n * Generated bundle index. Do not edit.\n */\n\n\nexport { FormlyBootstrapSelectModule, FormlyFieldSelect }; //# sourceMappingURL=ngx-formly-bootstrap-select.mjs.map","map":null,"metadata":{},"sourceType":"module"}